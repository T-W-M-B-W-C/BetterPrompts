# Makefile for BetterPrompts testing
.PHONY: help test test-unit test-integration test-e2e test-performance test-security coverage clean setup

# Default target
help:
	@echo "BetterPrompts Test Commands:"
	@echo "  make setup              - Set up test environment"
	@echo "  make test              - Run all tests"
	@echo "  make test-unit         - Run unit tests only"
	@echo "  make test-integration  - Run integration tests"
	@echo "  make test-e2e          - Run E2E tests"
	@echo "  make test-performance  - Run performance tests"
	@echo "  make test-security     - Run security tests"
	@echo "  make coverage          - Generate coverage report"
	@echo "  make clean             - Clean test artifacts"

# Setup test environment
setup:
	@echo "🚀 Setting up test environment..."
	@chmod +x scripts/setup-test-env.sh
	@./scripts/setup-test-env.sh

# Run all tests
test:
	@echo "🧪 Running all tests..."
	@docker compose -f docker-compose.test.yml up --abort-on-container-exit --exit-code-from test-runner

# Run unit tests only
test-unit:
	@echo "🧪 Running unit tests..."
	@docker compose -f docker-compose.test.yml run --rm test-runner bash -c "\
		cd /app && \
		./tests/scripts/test-service.sh api-gateway && \
		./tests/scripts/test-service.sh technique-selector && \
		./tests/scripts/test-service.sh intent-classifier && \
		./tests/scripts/test-service.sh prompt-generator && \
		./tests/scripts/test-service.sh frontend"

# Run integration tests
test-integration:
	@echo "🔗 Running integration tests..."
	@docker compose -f docker-compose.test.yml up -d test-postgres test-redis mock-torchserve
	@docker compose -f docker-compose.test.yml run --rm test-runner bash -c "\
		./tests/scripts/wait-for-services.sh && \
		cd /app && \
		go test -tags=integration ./backend/services/api-gateway/... && \
		pytest backend/services/intent-classifier/tests/integration/ && \
		pytest backend/services/prompt-generator/tests/integration/"

# Run E2E tests
test-e2e:
	@echo "🌐 Running E2E tests..."
	@docker compose -f docker-compose.test.yml up -d
	@docker compose -f docker-compose.test.yml run --rm test-runner ./tests/scripts/wait-for-services.sh
	@docker compose -f docker-compose.test.yml run --rm playwright

# Run performance tests
test-performance:
	@echo "⚡ Running performance tests..."
	@docker compose -f docker-compose.test.yml up -d
	@docker compose -f docker-compose.test.yml run --rm test-runner ./tests/scripts/wait-for-services.sh
	@echo "Running baseline test..."
	@docker compose -f docker-compose.test.yml run --rm k6 run --vus 10 --duration 5m /scripts/baseline-test.js
	@echo "Running load test..."
	@docker compose -f docker-compose.test.yml run --rm k6 run --vus 100 --duration 10m /scripts/load-test.js
	@docker compose -f docker-compose.test.yml run --rm test-runner python /app/tests/performance/analyze_results.py \
		--baseline /app/tests/performance/results/baseline.json \
		--current /app/tests/performance/results/k6-results.json

# Run security tests
test-security:
	@echo "🛡️  Running security tests..."
	@docker run --rm -v $(PWD):/src \
		aquasec/trivy fs --severity HIGH,CRITICAL /src
	@docker run --rm -v $(PWD):/src \
		returntocorp/semgrep --config=auto /src

# Generate coverage report
coverage:
	@echo "📊 Generating coverage report..."
	@docker compose -f docker-compose.test.yml run --rm test-runner ./tests/scripts/coverage-report.sh
	@echo "Coverage report available at: coverage/index.html"

# Clean test artifacts
clean:
	@echo "🧹 Cleaning test artifacts..."
	@rm -rf coverage/
	@rm -rf test-results/
	@rm -rf tests/e2e/results/
	@rm -rf tests/e2e/playwright-report/
	@rm -rf tests/performance/results/
	@docker compose -f docker-compose.test.yml down -v

# Run tests for specific service
test-%:
	@echo "🧪 Running tests for $*..."
	@docker compose -f docker-compose.test.yml run --rm test-runner ./tests/scripts/test-service.sh $*

# Watch mode for development
test-watch:
	@echo "👀 Running tests in watch mode..."
	@docker compose -f docker-compose.test.yml run --rm test-runner bash -c "\
		while true; do \
			inotifywait -r -e modify,create,delete /app/backend /app/frontend; \
			./tests/scripts/run-all-tests.sh; \
		done"