[tool:pytest]
# Test discovery
minversion = 7.0
python_files = test_*.py *_test.py tests.py
python_classes = Test* *Tests
python_functions = test_*
testpaths = tests

# Async configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Coverage settings
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=app
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=85
    --maxfail=3
    --ff
    -p no:warnings
    --color=yes

# Markers
markers =
    unit: Unit tests that test individual components
    integration: Integration tests that test component interactions
    slow: Tests that take longer than 1 second
    external: Tests that require external services
    ml: Tests for machine learning components
    torchserve: Tests that require TorchServe
    redis: Tests that require Redis
    postgres: Tests that require PostgreSQL
    skip_ci: Tests to skip in CI environment
    critical: Critical path tests that must pass

# Timeout
timeout = 300
timeout_method = thread

# Environment variables for testing
env = 
    ENVIRONMENT=test
    TESTING=true
    LOG_LEVEL=DEBUG
    REDIS_URL=redis://localhost:6379/1
    DATABASE_URL=postgresql://test:test@localhost:5432/test_intent_classifier
    TORCHSERVE_URL=http://localhost:8080
    USE_TORCHSERVE=false
    JWT_SECRET=test-secret-key
    CACHE_TTL=60
    PYTHONDONTWRITEBYTECODE=1

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Output
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = true

# Test isolation
usefixtures = reset_test_state