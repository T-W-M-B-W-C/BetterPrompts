# TorchServe Docker Image for BetterPrompts
# Multi-stage build for optimized production image

# Build arguments for flexible base image selection
ARG TORCHSERVE_VERSION=0.9.0
ARG BASE_IMAGE_TYPE=cpu

# Stage 1: Base image with flexible CPU/GPU support
FROM pytorch/torchserve:${TORCHSERVE_VERSION}-${BASE_IMAGE_TYPE} AS base

# Install system dependencies
USER root
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Stage 2: Model preparation
FROM base AS model-builder

# Set working directory
WORKDIR /home/model-server

# Copy requirements
COPY requirements-serving.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements-serving.txt

# Copy model artifacts and handlers
COPY torchserve/handlers /home/model-server/handlers
COPY scripts /home/model-server/scripts/
RUN chmod +x /home/model-server/scripts/*.sh || true

# Create directories
RUN mkdir -p /home/model-server/model-store \
    && mkdir -p /home/model-server/logs \
    && mkdir -p /home/model-server/config

# Stage 3: Production image
FROM base AS production

# Set model server user
USER model-server

# Copy from builder stage
COPY --from=model-builder /home/model-server /home/model-server

# Copy configuration files
COPY torchserve/config/config.properties /home/model-server/config/
COPY torchserve/config/log4j2.xml /home/model-server/config/

# Set environment variables with architecture-aware defaults
ENV JAVA_OPTS="-Xmx2g -Xms1g -XX:+UseG1GC -XX:MaxGCPauseMillis=100"
ENV TS_CONFIG_FILE="/home/model-server/config/config.properties"
ENV LOG4J_CONFIG_FILE="/home/model-server/config/log4j2.xml"
ENV MODEL_STORE="/home/model-server/model-store"
ENV METRICS_MODE="prometheus"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/ping || exit 1

# Expose ports
# 8080: Inference API
# 8081: Management API  
# 8082: Metrics API
EXPOSE 8080 8081 8082

# Set working directory
WORKDIR /home/model-server

# Copy startup script with correct permissions
COPY --chmod=755 torchserve/startup.sh /home/model-server/startup.sh

# Default command
CMD ["/home/model-server/startup.sh"]