apiVersion: apps/v1
kind: Deployment
metadata:
  name: torchserve
  namespace: model-serving
  labels:
    app: torchserve
    component: model-server
    project: betterprompts
spec:
  replicas: 3
  selector:
    matchLabels:
      app: torchserve
      component: model-server
  template:
    metadata:
      labels:
        app: torchserve
        component: model-server
        project: betterprompts
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: torchserve
      containers:
      - name: torchserve
        image: betterprompts/torchserve:latest
        imagePullPolicy: Always
        ports:
        - name: inference
          containerPort: 8080
          protocol: TCP
        - name: management
          containerPort: 8081
          protocol: TCP
        - name: metrics
          containerPort: 8082
          protocol: TCP
        env:
        - name: TS_CONFIG_FILE
          value: /config/config.properties
        - name: LOG4J_CONFIG_FILE
          value: /config/log4j2.xml
        - name: JAVA_OPTS
          value: "-Xmx4g -Xms2g -XX:+UseG1GC -XX:MaxGCPauseMillis=100"
        - name: MODEL_STORE
          value: /models
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
            nvidia.com/gpu: "1"
          limits:
            cpu: "4"
            memory: "8Gi"
            nvidia.com/gpu: "1"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: models
          mountPath: /models
        - name: logs
          mountPath: /var/log/torchserve
        livenessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ping
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: config
        projected:
          sources:
          - configMap:
              name: torchserve-config
              items:
              - key: config.properties
                path: config.properties
          - configMap:
              name: torchserve-log4j
              items:
              - key: log4j2.xml
                path: log4j2.xml
      - name: models
        persistentVolumeClaim:
          claimName: model-store-pvc
      - name: logs
        emptyDir: {}
      nodeSelector:
        node.kubernetes.io/gpu: "true"
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - torchserve
              topologyKey: kubernetes.io/hostname