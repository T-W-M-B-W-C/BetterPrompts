# Traefik configuration for advanced load balancing

global:
  checkNewVersion: true
  sendAnonymousUsage: false

serversTransport:
  insecureSkipVerify: false
  maxIdleConnsPerHost: 200

api:
  dashboard: true
  debug: false

entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  websecure:
    address: ":443"
    http:
      tls:
        certResolver: letsencrypt
    forwardedHeaders:
      trustedIPs:
        - 10.0.0.0/8
        - 172.16.0.0/12
  metrics:
    address: ":8082"

providers:
  kubernetes:
    endpoint: "https://kubernetes.default:443"
    token: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    certAuthFilePath: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    namespaces:
      - model-serving
    labelselector: "app=torchserve"
  kubernetesCRD:
    namespaces:
      - model-serving
    labelselector: "app=torchserve"

certificatesResolvers:
  letsencrypt:
    acme:
      email: devops@betterprompts.com
      storage: /etc/traefik/acme/acme.json
      keyType: EC256
      httpChallenge:
        entryPoint: web

log:
  level: INFO
  format: json

accessLog:
  format: json
  fields:
    defaultMode: keep
    headers:
      defaultMode: drop
      names:
        User-Agent: keep
        Authorization: drop

metrics:
  prometheus:
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5.0
    addEntryPointsLabels: true
    addServicesLabels: true
    entryPoint: metrics

ping:
  entryPoint: web

# Circuit breaker configuration
# Applied via CRD or labels