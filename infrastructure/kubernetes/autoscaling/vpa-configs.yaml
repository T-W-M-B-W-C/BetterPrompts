# Vertical Pod Autoscaler configurations for BetterPrompts services
# Automatically adjusts CPU and memory requests based on usage

---
# VPA for Frontend (Recommendation mode)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: frontend-vpa
  namespace: default
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  updatePolicy:
    updateMode: "Off"  # Only recommendations, no automatic updates
  resourcePolicy:
    containerPolicies:
    - containerName: frontend
      minAllowed:
        cpu: 100m
        memory: 256Mi
      maxAllowed:
        cpu: 1000m
        memory: 2Gi
      controlledResources: ["cpu", "memory"]

---
# VPA for API Gateway (Auto mode for development)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: api-gateway-vpa
  namespace: default
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  updatePolicy:
    updateMode: "Auto"  # Automatically update pods in dev/staging
  resourcePolicy:
    containerPolicies:
    - containerName: api-gateway
      minAllowed:
        cpu: 200m
        memory: 512Mi
      maxAllowed:
        cpu: 2000m
        memory: 4Gi
      controlledResources: ["cpu", "memory"]

---
# VPA for Intent Classifier (Initial mode)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: intent-classifier-vpa
  namespace: default
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: intent-classifier
  updatePolicy:
    updateMode: "Initial"  # Only set resources on pod creation
  resourcePolicy:
    containerPolicies:
    - containerName: intent-classifier
      minAllowed:
        cpu: 500m
        memory: 1Gi
      maxAllowed:
        cpu: 4000m
        memory: 8Gi
      controlledResources: ["cpu", "memory"]

---
# VPA for Technique Selector
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: technique-selector-vpa
  namespace: default
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: technique-selector
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: technique-selector
      minAllowed:
        cpu: 100m
        memory: 256Mi
      maxAllowed:
        cpu: 1000m
        memory: 2Gi
      controlledResources: ["cpu", "memory"]

---
# VPA for Prompt Generator (GPU workload)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: prompt-generator-vpa
  namespace: default
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: prompt-generator
  updatePolicy:
    updateMode: "Off"  # Manual control for GPU pods
  resourcePolicy:
    containerPolicies:
    - containerName: prompt-generator
      minAllowed:
        cpu: 1000m
        memory: 2Gi
      maxAllowed:
        cpu: 8000m
        memory: 16Gi
      controlledResources: ["cpu", "memory"]
      # Note: GPU resources are not controlled by VPA

---
# VPA for System Components
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: prometheus-vpa
  namespace: monitoring
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: prometheus
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: prometheus
      minAllowed:
        cpu: 500m
        memory: 1Gi
      maxAllowed:
        cpu: 4000m
        memory: 16Gi
      controlledResources: ["cpu", "memory"]

---
# VPA Recommender for all workloads (monitor only)
apiVersion: v1
kind: ConfigMap
metadata:
  name: vpa-recommender-config
  namespace: kube-system
data:
  config.yaml: |
    # VPA Recommender Configuration
    recommender:
      # Check recommendations every 1 minute
      checkpointsGCInterval: 1m
      # Memory aggregation interval
      memoryAggregationInterval: 1m
      # Memory histogram decay half-life
      memoryHistogramDecayHalfLife: 24h
      # CPU histogram decay half-life  
      cpuHistogramDecayHalfLife: 24h
      # Target CPU percentile for recommendations
      targetCPUPercentile: 0.9
      # Target memory percentile for recommendations
      targetMemoryPercentile: 0.9
      # Safety margin multiplier
      safetyMarginFraction: 0.15
      # Minimum number of samples before recommendation
      minSampleSize: 100